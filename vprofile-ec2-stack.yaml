---
- name: Setup vprofile Stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC Setup output Variables
      include_vars: vars/output_vars

    - name: Import vprofile Stack Variables
      include_vars: vars/vprofilestack_setup

    - name: Import VPC setup Variables
      include_vars: vars/vpc_setup

    - name: create vprofile stack ec2 key
      ec2_key: 
        name: vprofilestack
        region: "{{region}}"
      register: vprofilekey_out

    - name: save private key to file
      copy:
        content: "{{vprofilekey_out.key.private_key}}"
        dest: "./vprofilestack.pem"
        mode: 0600
      when: vprofilekey_out.changed

    - name: Create Security group for Load Balancer
      ec2_group:
        name: vprofileELB-SG
        description: Allow port 80 from everywhere and all port within SG
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vprofileELBSG_out

    - name: Security Group for Vprofile Stack
      ec2_group:
        name: vprofileStack-SG
        description: Allow port 22 from everywhere and all port within SG
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vprofileELBSG_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{bastionSGid}}"
      register: vprofileStackSG_out

    - name: Update Security group with its own SG id
      ec2_group:
        name: vprofileStack-SG
        description: Allow port 22 within SG
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vprofileStackSG_out.group_id}}"

    - name: Creating Nginx web01
      ec2:  
        key_name: vprofilestack
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: vprofile
          Owner: Devops Team
        group_id: "{{vprofileStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out

    - name: Creating tomcat app01
      ec2:
        key_name: vprofilestack
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "app01"
          Project: vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag: 
          Name: "app01"
          Project: vprofile
          Owner: Devops Team
        group_id: "{{vprofileStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out

    - name: Creating memcahe mc01
      ec2:
        key_name: vprofilestack
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "mc01"
          Project: vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag: 
          Name: "mc01"
          Project: vprofile
          Owner: Devops Team
        group_id: "{{vprofileStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out

    - name: Creating RabbitMQ rmq01
      ec2:
        key_name: vprofilestack
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "rmq01"
          Project: vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag: 
          Name: "rmq01"
          Project: vprofile
          Owner: Devops Team
        group_id: "{{vprofileStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out

    - name: Creating MySQL db01
      ec2:
        key_name: vprofilestack
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "db01"
          Project: vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag: 
          Name: "db01"
          Project: vprofile
          Owner: Devops Team
        group_id: "{{vprofileStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out

    - debug:
        var: "{{item}}.instances.id"
        loop:
          - db01_out
          - rmq01_out
          - mc01_out
          - app01_out
          - web01_out
