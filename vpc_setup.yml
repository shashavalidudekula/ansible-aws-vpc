- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup
    
    - name: Create a VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout

    - name: Create public subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        tags:
          Name: vprofile-PubSub1Cidr
      register: pubsub1_out

    - name: Create public subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: yes
        tags:
          Name: vprofile-PubSub2Cidr
      register: pubsub2_out

    - name: Create public subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: yes
        tags:
          Name: vprofile-PubSub3Cidr
      register: pubsub3_out

    - name: Create private subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        map_public: no
        tags:
          Name: vprofile-PrivSub1Cidr
      register: privsub1_out

    - name: Create private subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        map_public: no
        tags:
          Name: vprofile-PrivSub2Cidr
      register: privsub2_out

    - name: Create private subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}"
        map_public: no
        tags:
          Name: vprofile-PrivSub3Cidr
      register: privsub3_out

#Create Internet Gateway
    - name: Create Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        state: "{{state}}"
        region: "{{region}}"
        tags:
          Name: vprofile_igw
      register: igw_out

# Create route table 
    - name: setup public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: vprofile_pubRT
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out

# Create a NAT Gateway
    - name: Create NAT Gateway and allocate new EIP if a nat gateway does not yet exist
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NATGW_out

    - name: setup private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: vprofile_privRT
        subnets:
          - "{{privsub1_out.subnet.id}}"
          - "{{privsub2_out.subnet.id}}"
          - "{{privsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{NATGW_out.nat_gateway_id}}"
      register: privRT_out

    - debug:
        var: "{{item}}"
      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id
        - igw_out.gateway_id
        - pubRT_out.route_table.id
        - NATGW_out.nat_gateway_id
        - privRT_out.route_table.id
    
    - set_fact:
        vpcid: "{{vpcout.vpc.id}}" 
        pubsub1id: "{{pubsub1_out.subnet.id}}"
        pubsub2id: "{{pubsub2_out.subnet.id}}"
        pubsub3id: "{{pubsub3_out.subnet.id}}"
        privsub1id: "{{privsub1_out.subnet.id}}"
        privsub2id: "{{privsub2_out.subnet.id}}" 
        privsub3id: "{{privsub3_out.subnet.id}}"
        igwid: "{{igw_out.gateway_id}}"
        pubRTid: "{{ pubRT_out.route_table.id }}"
        NATGWid: "{{NATGW_out.nat_gateway_id}}" 
        privRTid: "{{privRT_out.route_table.id}}" 
        cacheable: yes
      
    - name: Copy Variables fro vpc output
      copy:
        content: " vpcid: {{vpcout.vpc.id}}\n pubsub1id: {{pubsub1_out.subnet.id}}\n pubsub2id: {{pubsub2_out.subnet.id}}\n pubsub3id: {{pubsub3_out.subnet.id}}\n privsub1id: {{privsub1_out.subnet.id}}\n privsub2id: {{privsub2_out.subnet.id}}\n privsub3id: {{privsub3_out.subnet.id}} \n igwid: {{igw_out.gateway_id}}\n pubRTid: {{ pubRT_out.route_table.id }} \n NATGWid: {{NATGW_out.nat_gateway_id}}\n privRTid: {{privRT_out.route_table.id}} "
        dest: vars/output_vars
